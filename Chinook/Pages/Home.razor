@page "/"
@attribute [Authorize]

@using Chinook.ClientModels
@using Chinook.Models
@using Microsoft.EntityFrameworkCore

<PageTitle>Index</PageTitle>

<h1>Artists</h1>
<div class="form-group row">
    <div class="col-sm-3">
        <label class="control-label">Type Artist Name</label>
    </div>
    <div class="col-sm-3">
        <InputText class="form-control" @bind-Value="ArtistSearchText" />
    </div>
    <div class="col-sm-6">
        <input type="button" class="btn btn-primary" value="Search" onclick="@GetArtists">
    </div>
</div>
@if (Artists == null)
{
    <Loading />
}
else
{
    <table class="table table-striped table-hover table-sm">
        <thead>
            <tr>
                <th>Name</th>
                <th>Number of albums</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var artist in Artists)
            {
                <tr>
                    <td><a href="Artist/@artist.ArtistId">@artist.ArtistName</a></td>
                    <td>@artist.NumberOfAlbums</td>
                </tr>
            }
        </tbody>
    </table>
}

@code {
    private List<ArtistVM> Artists;
    private string? ArtistSearchText = string.Empty;
    [Inject] HttpClient Http { get; set; }
    [Inject] IDbContextFactory<ChinookContext> DbFactory { get; set; }

    protected override async Task OnInitializedAsync()
    {
        await InvokeAsync(StateHasChanged);
        await GetArtists();
    }

    public async Task GetArtists()
    {
        if (!string.IsNullOrEmpty(ArtistSearchText))
            Artists = await Http.GetFromJsonAsync<List<ArtistVM>>($"api/Artist/GetArtistsBySearchText/{ArtistSearchText}");
        else
            Artists = await Http.GetFromJsonAsync<List<ArtistVM>>($"api/Artist/GetArtistsAll");
    }

 
}
